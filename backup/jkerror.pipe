#ipeline for power spectrum

pipe_modules = []
pipe_processes = 1

#Peak remove : clean map -> pkrm clean map
#from mkpower import pkrm
#pipe_modules.append(pkrm.PeakRemove)
pr_processes = 1
#pr_plot = False
pr_plot = True
pr_input_root = '../newmaps/'
pr_output_root = '../powerresult/'
pr_hr = ('15hr_40-41-43_', '15hr_42_')
pr_mid = 'cleaned_clean_map_'
pr_polarizations = ('I',)

#Weight : clean map -> dirty map
#from mkpower import weight
#pipe_modules.append(weight.NoiseInversWeight)
wt_processes = 1
wt_plot = False
wt_input_root = pr_output_root
wt_output_root = '../powerresult/'
wt_hr = ('pkrm_15hr_40-41-43_', 'pkrm_15hr_42_')
wt_mid = 'cleaned_clean_map_'
wt_polarizations = ('I',)


#Calculate the Pk
#from mkpower import mkpower
#pipe_modules.append(mkpower.PowerSpectrumMaker)
pk_processes = 1
pk_plot = True
pk_input_root = wt_output_root
pk_output_root = '../powerresult/'
pk_hr = ('pkrm_15hr_40-41-43_', 'pkrm_15hr_42_')
pk_mid = 'dirty_map_'
pk_polarizations = ('I',)
pk_boxshape = (128, 64, 32)
pk_discrete = 3
pk_boxunit = 9.0
pk_Xrange = (1400,)
pk_Yrange = (-288, 288)
pk_Zrange = (0.0, 288.0)
#pk_boxshape = (60, 60, 60)
#pk_discrete = 3
#pk_boxunit = 15.0
#pk_Xrange = (1400,)
#pk_Yrange = (-450, 450)
#pk_Zrange = (0.0, 900.0)
#pk_boxshape = (60, 20, 20)
#pk_discrete = 3
#pk_boxunit = 15.0
#pk_Xrange = (1400,)
#pk_Yrange = (-150, 150)
#pk_Zrange = (0.0, 300.0)

"""  Make JackKnife Map """
#from mkpower import jkmap
#pipe_modules.append(jkmap.JackKnifeErrorMap)
jm_processes = 1
jm_plot = False
jm_input_root = wt_output_root
jm_jkbin = 1000
jm_hr = ('pkrm_15hr_40-41-43_', 'pkrm_15hr_42_')
jm_mid = 'dirty_map_'
jm_polarizations = ('I',)
jm_output_root = '../powerresult/'



""" Calculate the jk error """
from mkpower import jkerror
pipe_modules.append(jkerror.JackKnifeError)
jk_processes = 1
jk_plot = False
jk_input_root = jm_output_root
jk_jknumber = 150
jk_hr = ('pkrm_15hr_40-41-43_', 'pkrm_15hr_42_')
jk_mid = 'dirty_map_'
jk_polarizations = ('I',)
jk_output_root = '../powerresult/'
jk_boxshape = (128, 64, 32)
jk_discrete = 3
jk_boxunit = 9.0
jk_Xrange = (1400,)
jk_Yrange = (-288, 288)
jk_Zrange = (0.0, 288.0)


#Plot
#from mkpower import plot
#pipe_modules.append(plot.PowerSpectrumPlot)
pt_processes = 1
pt_input_root = jm_output_root
pt_output_root = '../powerresult/'
